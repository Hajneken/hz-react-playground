import React from 'react';class UnderstandLifecycle extends React.Component {    constructor() {        super();        this.state = {            value: 0,            time : new Date()    }    }  tick(){        this.setState({time : new Date()})  }    // before component mounted to DOM    // DOCUMENTATION: deprecated ... "we recommend using the constructor() instead for initializing state."    UNSAFE_componentWillMount() {        console.log('Component will mount')    }    // after component mounted    componentDidMount() {        console.log('Component did mount');        this.timer = setInterval(() => setInterval(this.tick(), 1000))    }    // DOCUMENTATION: " Perform any necessary cleanup in this method    // such as invalidating timers, canceling network requests, or    // cleaning up any subscriptions that were created in componentDidMount()."    componentWillUnmount() {        console.log('Component will UNmount')        this.timer = null;    }    render() {        return (            <div>                <h2>{this.state.time.toLocaleTimeString()}</h2>                <p>Check to console</p>            </div>        )    }}export default UnderstandLifecycle;